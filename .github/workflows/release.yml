name: release

on:
  release: # Docs: <https://git.io/JeBz1#release-event-release>
    types: [published]

jobs:
  #  demo:
  #    name: Update demonstration, hosted on github pages
  #    runs-on: ubuntu-20.04
  #    steps:
  #      - name: Check out code
  #        uses: actions/checkout@v2
  #
  #      - name: Setup NodeJS
  #        uses: actions/setup-node@v1 # Action page: <https://github.com/actions/setup-node>
  #        with:
  #          node-version: 15
  #
  #      - uses: actions/cache@v2
  #        with:
  #          path: '**/node_modules'
  #          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #
  #      - name: Install dependencies
  #        working-directory: generator
  #        run: yarn install
  #
  #      - name: Generate pages
  #        run: ./generator/generator.js -i -c ./config.json -o ./out
  #
  #      - name: Upload artifact
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: content
  #          path: out/
  #          retention-days: 1
  #
  #      - name: Switch to github pages branch
  #        uses: actions/checkout@v2
  #        with:
  #          ref: gh-pages
  #
  #      - name: Download artifact
  #        uses: actions/download-artifact@v2
  #        with:
  #          name: content
  #
  #      - name: Setup git
  #        run: |
  #          git config --global user.name "$GITHUB_ACTOR"
  #          git config --global user.email 'actions@github.com'
  #          git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
  #
  #      - name: Stage changes
  #        run: git add .
  #
  #      - name: Commit changes
  #        run: git commit --allow-empty -m "Deploying ${GITHUB_SHA} to Github Pages"
  #
  #      - name: Push changes
  #        run: git push github --force

  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        os: [linux, darwin]
        arch: [amd64, 386]
    steps:
      - uses: actions/setup-go@v2
        with: {go-version: 1.17.1}

      - uses: actions/checkout@v2

      - uses: gacts/github-slug@v1
        id: slug

      - name: Generate builder values
        id: values
        run: echo "::set-output name=binary-name::error-pages-${{ matrix.os }}-${{ matrix.arch }}"

      - name: Build application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
          LDFLAGS: -s -w -X github.com/tarampampam/error-pages/internal/pkg/version.version=${{ steps.slug.outputs.version }}
        run: go build -trimpath -ldflags "$LDFLAGS" -o "./${{ steps.values.outputs.binary-name }}" ./cmd/error-pages/

      - name: Upload binary file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.values.outputs.binary-name }}
          asset_name: ${{ steps.values.outputs.binary-name }}
          tag: ${{ github.ref }}

      - name: Generate error pages
        if: |
          matrix.os == 'linux' && matrix.arch == 'amd64'
        run: "./${{ steps.values.outputs.binary-name }}" build ./out --verbose --index

      - uses: actions/upload-artifact@v2
        if: |
          matrix.os == 'linux' && matrix.arch == 'amd64'
        with:
          name: generated-error-pages
          path: out/
          retention-days: 1

  docker-image:
    name: Build docker image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: gacts/github-slug@v1
        id: slug

      - uses: docker/setup-qemu-action@v1 # Action page: <https://github.com/docker/setup-qemu-action>

      - uses: docker/setup-buildx-action@v1 # Action page: <https://github.com/docker/setup-buildx-action>

      - uses: docker/login-action@v1 # Action page: <https://github.com/docker/login-action>
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/login-action@v1 # Action page: <https://github.com/docker/login-action>
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - uses: docker/build-push-action@v2 # Action page: <https://github.com/docker/build-push-action>
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v6,linux/arm/v7
          build-args: "APP_VERSION=${{ steps.slug.outputs.version }}"
          tags: |
            tarampampam/error-pages:${{ steps.slug.outputs.version }}
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}:${{ steps.slug.outputs.version }}

#          tarampampam/error-pages:latest # TODO uncomment on release
#          ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}:latest
